#!/bin/bash
##===========================================================================
#%
#% USAGE: kbuild [OPTIONS] COMMAND
#%
#% The kbuild script is a convenient wrapper running the kbuild.sh script
#% inside a Docker container.
#%
#% If no configuration file is specified, it looks for a file named
#% kbuild.cfg in current directory.
#%
#%
#% COMMANDS:
#%   all              Builds everything specified in the CONFIG_FILE file
#%   linux            Only build Linux Debian packages
#%   rtl8723          Only build RTL8723 Wifi drivers packages
#%   chip-mali        Only build Mali GPU drivers for C.H.I.P 
#%
#%   linux-nconfig    Allows to modify the Linux configuration
#%
#%   shell <CMD>      Run interactive bash shell in Docker container
#%   update-image     Tries to pull the lates version of the Docker image
#%
#%
#% OPTIONS:
#%   -h               Show this help
#%   -v               Show verbose output
#%   -c CONFIG_FILE   Use custom config file
#%   -i IMAGE         Use custom command in Docker container image
#%
##===========================================================================

export SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

[[ ! -x "$(which docker)" ]] && echo "ERROR: cannot find docker binay in path - please verify Docker installation" && exit 1

function help() {
    head -n 200 "$SCRIPT_DIR/$(basename $0)" | sed -n -e 's/^#%//gp;'
    exit
}

while getopts ":hvi:c:" opt; do
    case $opt in
        h)
            help
            ;;
        v)
            export VERBOSE_FLAG="-v"
            ;;
        c)
            CONFIG_FILE="${OPTARG}"
            ;;
        i)
            CONTAINER_IMAGE="${OPTARG}"
            ;;
 
        \?)
            echo "invalid option: -$OPTARG"
            exit 1
            ;;
    esac
done
shift "$((OPTIND - 1))"

command="$1"
case "$command" in
    linux-nconfig)
        ### do something special here!
        CMDLINE_ARGS="$command"
        ;;

    shell)
            CMD="${@}"
            CMD="${CMD#* }"
            CMD=${CMD:-"/bin/bash --login"}
        ;;

    update-image)
        echo "ERROR: not implemented yet - sorry"
        exit 1
        ;;

    "")
        help
        ;;

    *)
        CMDLINE_ARGS="$command"
        ;;
esac


export CMD="${CMD:-kbuild.sh $VERBOSE_FLAG $CMDLINE_ARGS}"
export CONTAINER_IMAGE="${CONTAINER_IMAGE:-ntc-registry.githost.io/nextthingco/kbuild:unstable}"

export CI_JOB_ID=${RANDOM}

# CONFIG_FILE either spacified as environment variable or as first command line parameter
CONFIG_FILE=${CONFIG_FILE:-kbuild.cfg}
[[ ! -f "$CONFIG_FILE" ]] && echo "ERROR: cannot find configuration file '$CONFIG_FILE'" && exit 1
TMP_CFG=$(mktemp)
cp "$CONFIG_FILE" "$TMP_CFG"
CFG_FILE_FLAG="-v $(cd "$(dirname "$TMP_CFG")"; pwd)/$(basename "$TMP_CFG"):/work/kbuild.cfg"

#docker pull $CONTAINER_IMAGE
docker run --rm -it \
           -e PRIVATE_DEPLOY_KEY="${PRIVATE_DEPLOY_KEY}"  \
           -e CI_JOB_ID="${CI_JOB_ID}" \
           -v $SCRIPT_DIR:/opt/kbuild \
           -v $PWD:/work -w /work \
           $CFG_FILE_FLAG \
           $CONTAINER_IMAGE $CMD

rm $TMP_CFG
